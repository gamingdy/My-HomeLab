# SonarQube
# Web UI: http://sonarqube:9000

services:
    sonarqube:
        container_name: sonarqube
        image: sonarqube:community
        restart: always
        depends_on:
            - db
        environment:
            SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar
        volumes:
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_logs:/opt/sonarqube/logs
        networks:
            - sonarqube-net
            - proxy-net
        labels:
            traefik.enable: true
            traefik.http.routers.sonarqube.entrypoints: web,websecure
            traefik.http.routers.sonarqube.tls: true
            traefik.http.routers.sonarqube.tls.certresolver: production
            traefik.http.routers.sonarqube.rule: Host(`sonar.example.com`)
            traefik.http.services.sonarqube.loadbalancer.server.port: 9000
            traefik.docker.network: proxy-network

    db:
        image: postgres:12
        restart: always
        environment:
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
        volumes:
            - postgresql:/var/lib/postgresql
            - postgresql_data:/var/lib/postgresql/data
        networks:
            - sonarqube-net

volumes:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_logs:
    postgresql:
    postgresql_data:

networks:
    sonarqube-net:
    proxy-net:
        name: proxy-network
        external: true